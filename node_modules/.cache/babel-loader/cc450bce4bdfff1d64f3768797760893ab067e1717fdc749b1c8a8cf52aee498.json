{"ast":null,"code":"var _jsxFileName = \"/project/github_material/material-dashboard-react-main/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\n// 一些react的hooks管理组件的状态和副作用\n\n// react-router components\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\n\n// @mui material components\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\";\n\n// Material Dashboard 2 React themes\nimport theme from \"assets/theme\";\nimport themeRTL from \"assets/theme/theme-rtl\";\n\n// Material Dashboard 2 React Dark Mode themes\nimport themeDark from \"assets/theme-dark\";\nimport themeDarkRTL from \"assets/theme-dark/theme-rtl\";\n\n// RTL plugins\nimport rtlPlugin from \"stylis-plugin-rtl\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createCache from \"@emotion/cache\";\n\n// Material Dashboard 2 React routes\nimport routes from \"routes\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController, setMiniSidenav, setOpenConfigurator } from \"context\";\n\n// Images\nimport brandWhite from \"assets/images/logo-ct.png\";\nimport brandDark from \"assets/images/logo-ct-dark.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [controller, dispatch] = useMaterialUIController(); //Hook 获取了一个名为 controller 的对象，其中包含了一些状态值和 dispatch 方法。\n  const {\n    miniSidenav,\n    direction,\n    layout,\n    openConfigurator,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode\n  } = controller; //从 controller 对象中取出了一些状态值\n  const [onMouseEnter, setOnMouseEnter] = useState(false); //Hook 定义了两个状态变量 onMouseEnter 和 rtlCache\n  const [rtlCache, setRtlCache] = useState(null);\n  const {\n    pathname\n  } = useLocation(); // Hook 获取了当前页面的路径信息\n\n  // Hook 创建了一个缓存对象 cacheRtl，并将其设置到了 rtlCache 状态变量\n  useMemo(() => {\n    const cacheRtl = createCache({\n      key: \"rtl\",\n      stylisPlugins: [rtlPlugin]\n    });\n    setRtlCache(cacheRtl);\n  }, []);\n\n  // Open sidenav when mouse enter on mini sidenav,handleOnMouseEnter 和 handleOnMouseLeave 两个函数，用于处理鼠标进入和离开事件,设置鼠标移到选项有虚化效果\n  const handleOnMouseEnter = () => {\n    if (miniSidenav && !onMouseEnter) {\n      setMiniSidenav(dispatch, false);\n      setOnMouseEnter(true);\n    }\n  };\n\n  // Close sidenav when mouse leave mini sidenav\n  const handleOnMouseLeave = () => {\n    if (onMouseEnter) {\n      setMiniSidenav(dispatch, true);\n      setOnMouseEnter(false);\n    }\n  };\n\n  // Change the openConfigurator state ,切换 openConfigurator 状态的值\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n\n  // Hook 监听了 direction 状态的变化，并在变化时设置了页面的 dir 属性\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]);\n\n  // Hook 监听了 pathname 的变化，并在变化时将页面滚动位置重置为顶部\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n\n  //函数首先使用 map 方法遍历传入的 allRoutes 数组，对每个路由信息进行处理\n  const getRoutes = allRoutes => allRoutes.map(route => {\n    if (route.collapse) {\n      //检查是否存在子路由（通过 collapse 属性）\n      return getRoutes(route.collapse); //如果存在子路由，则递归调用 getRoutes 函数处理子路由\n    }\n    if (route.route) {\n      //判断当前路由是否包含 route 属性，如果包含则返回相应的 Route 组件\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: route.route,\n        element: route.component\n      }, route.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this);\n    }\n    return null;\n  });\n\n  //使用 Material-UI 中的组件来创建一个固定在页面右下角的圆形按钮,点击后会触发 handleConfiguratorOpen 函数\n  const configsButton = /*#__PURE__*/_jsxDEV(MDBox, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"3.25rem\",\n    height: \"3.25rem\",\n    bgColor: \"white\",\n    shadow: \"sm\",\n    borderRadius: \"50%\",\n    position: \"fixed\",\n    right: \"2rem\",\n    bottom: \"2rem\",\n    zIndex: 99,\n    color: \"dark\",\n    sx: {\n      cursor: \"pointer\"\n    },\n    onClick: handleConfiguratorOpen,\n    children: /*#__PURE__*/_jsxDEV(Icon, {\n      fontSize: \"small\",\n      color: \"inherit\",\n      children: \"settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n  return (\n    /*#__PURE__*/\n    //提供整个应用程序的主题支持。根据 darkMode 的值选择不同的主题，themeDark 用于暗黑模式，theme 用于默认模式\n    _jsxDEV(ThemeProvider, {\n      theme: darkMode ? themeDark : theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), layout === \"dashboard\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n          color: sidenavColor,\n          brand: transparentSidenav && !darkMode || whiteSidenav ? brandDark : brandWhite,\n          brandName: \"\\u6D4B\\u8BD5\\u5E73\\u53F012\",\n          routes: routes,\n          onMouseEnter: handleOnMouseEnter,\n          onMouseLeave: handleOnMouseLeave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Configurator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), configsButton]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"n7MZwrJP0foajuUcFuxdpq1a+YE=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","Routes","Route","Navigate","useLocation","ThemeProvider","CssBaseline","Icon","MDBox","Sidenav","Configurator","theme","themeRTL","themeDark","themeDarkRTL","rtlPlugin","CacheProvider","createCache","routes","useMaterialUIController","setMiniSidenav","setOpenConfigurator","brandWhite","brandDark","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","controller","dispatch","miniSidenav","direction","layout","openConfigurator","sidenavColor","transparentSidenav","whiteSidenav","darkMode","onMouseEnter","setOnMouseEnter","rtlCache","setRtlCache","pathname","cacheRtl","key","stylisPlugins","handleOnMouseEnter","handleOnMouseLeave","handleConfiguratorOpen","document","body","setAttribute","documentElement","scrollTop","scrollingElement","getRoutes","allRoutes","map","route","collapse","exact","path","element","component","fileName","_jsxFileName","lineNumber","columnNumber","configsButton","display","justifyContent","alignItems","width","height","bgColor","shadow","borderRadius","position","right","bottom","zIndex","color","sx","cursor","onClick","children","fontSize","brand","brandName","onMouseLeave","to","_c","$RefreshReg$"],"sources":["/project/github_material/material-dashboard-react-main/src/App.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\n// 一些react的hooks管理组件的状态和副作用\n\n// react-router components\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\n\n// @mui material components\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\";\n\n// Material Dashboard 2 React themes\nimport theme from \"assets/theme\";\nimport themeRTL from \"assets/theme/theme-rtl\";\n\n// Material Dashboard 2 React Dark Mode themes\nimport themeDark from \"assets/theme-dark\";\nimport themeDarkRTL from \"assets/theme-dark/theme-rtl\";\n\n// RTL plugins\nimport rtlPlugin from \"stylis-plugin-rtl\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createCache from \"@emotion/cache\";\n\n// Material Dashboard 2 React routes\nimport routes from \"routes\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController, setMiniSidenav, setOpenConfigurator } from \"context\";\n\n// Images\nimport brandWhite from \"assets/images/logo-ct.png\";\nimport brandDark from \"assets/images/logo-ct-dark.png\";\n\nexport default function App() {\n  const [controller, dispatch] = useMaterialUIController(); //Hook 获取了一个名为 controller 的对象，其中包含了一些状态值和 dispatch 方法。\n  const {\n    miniSidenav,\n    direction,\n    layout,\n    openConfigurator,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n  } = controller; //从 controller 对象中取出了一些状态值\n  const [onMouseEnter, setOnMouseEnter] = useState(false); //Hook 定义了两个状态变量 onMouseEnter 和 rtlCache\n  const [rtlCache, setRtlCache] = useState(null);\n  const { pathname } = useLocation(); // Hook 获取了当前页面的路径信息\n\n  // Hook 创建了一个缓存对象 cacheRtl，并将其设置到了 rtlCache 状态变量\n  useMemo(() => {\n    const cacheRtl = createCache({\n      key: \"rtl\",\n      stylisPlugins: [rtlPlugin],\n    });\n\n    setRtlCache(cacheRtl);  \n  }, []);\n\n  // Open sidenav when mouse enter on mini sidenav,handleOnMouseEnter 和 handleOnMouseLeave 两个函数，用于处理鼠标进入和离开事件,设置鼠标移到选项有虚化效果\n  const handleOnMouseEnter = () => {\n    if (miniSidenav && !onMouseEnter) {\n      setMiniSidenav(dispatch, false);\n      setOnMouseEnter(true);\n    }\n  };\n\n  // Close sidenav when mouse leave mini sidenav\n  const handleOnMouseLeave = () => {\n    if (onMouseEnter) {\n      setMiniSidenav(dispatch, true);\n      setOnMouseEnter(false);\n    }\n  };\n\n  // Change the openConfigurator state ,切换 openConfigurator 状态的值\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n\n  // Hook 监听了 direction 状态的变化，并在变化时设置了页面的 dir 属性\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]);\n\n  // Hook 监听了 pathname 的变化，并在变化时将页面滚动位置重置为顶部\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n\n  //函数首先使用 map 方法遍历传入的 allRoutes 数组，对每个路由信息进行处理\n const getRoutes = (allRoutes) =>\n    allRoutes.map((route) => {\n      if (route.collapse) {   //检查是否存在子路由（通过 collapse 属性）\n        return getRoutes(route.collapse); //如果存在子路由，则递归调用 getRoutes 函数处理子路由\n      }\n\n      if (route.route) { //判断当前路由是否包含 route 属性，如果包含则返回相应的 Route 组件\n        return <Route exact path={route.route} element={route.component} key={route.key} />;\n      }\n\n      return null;\n    });\n\n    //使用 Material-UI 中的组件来创建一个固定在页面右下角的圆形按钮,点击后会触发 handleConfiguratorOpen 函数\n  const configsButton = (\n    <MDBox\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"3.25rem\"\n      height=\"3.25rem\"\n      bgColor=\"white\"\n      shadow=\"sm\"\n      borderRadius=\"50%\"\n      position=\"fixed\"\n      right=\"2rem\"\n      bottom=\"2rem\"\n      zIndex={99}\n      color=\"dark\"\n      sx={{ cursor: \"pointer\" }}\n      onClick={handleConfiguratorOpen}\n    >\n      <Icon fontSize=\"small\" color=\"inherit\">\n        settings\n      </Icon>\n    </MDBox>\n  );\n\n  return  (\n    //提供整个应用程序的主题支持。根据 darkMode 的值选择不同的主题，themeDark 用于暗黑模式，theme 用于默认模式\n    <ThemeProvider theme={darkMode ? themeDark : theme}>  \n      <CssBaseline />\n      {layout === \"dashboard\" && (\n        <>\n          <Sidenav\n            color={sidenavColor}\n            brand={(transparentSidenav && !darkMode) || whiteSidenav ? brandDark : brandWhite}\n            brandName=\"测试平台12\"\n            routes={routes}\n            onMouseEnter={handleOnMouseEnter}\n            onMouseLeave={handleOnMouseLeave}\n          />\n          <Configurator />\n          {configsButton}\n        </>\n      )}\n      <Routes>\n        {getRoutes(routes)}\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\n      </Routes>\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}